snap alias microk8s.kubectl kubectl
snap alias microk8s.docker docker

#set default jdk if you have 2
sudo update-java-alternatives --set /usr/lib/jvm/java-1.8.0-openjdk-amd64
OR
sudo update-alternatives --config java

kubectl run nginx --image nginx
 similarly:
 kubectl  run spring-boot2 --image spring-boot:1.0 --generator=run-pod/v1

kubectl get nodes -o wide

kubectl expose deploy spring-boot --port 8088 --target-port 8088 --type ClusterIP  (read more abt this how app is load balanced on port 8088)

kubectl exec -it spring-boot-5f7c478d88-fv2hg /bin/sh
	# afer shell you can do 
	hostname
	ip addr

#declarative

kubectl get service spring-boot -o yaml --export > service-spring-boot.yaml
kubectl get deployment spring-boot -o yaml --export > service-spring-boot.yaml
OR
kubectl get service spring-boot -o json --export > service-spring-boot.json

#delete service deployment pods with
kubectl delete service 
kubectl delete deployment 
etc

#create services with yaml

kubectl apply -f filename.yaml

#edit
kubectl edit deployment spring-boot

# get dashboard IP
first enable dashboard:
microk8s enable dns dashboard
kubectl get all --all-namespaces

curl to get spring boot hello:
curl http://10.152.183.148:8088/

#logs of running jar
first list pods: kubectl get pods
kubectl logs spring-boot-5f7c478d88-fv2hg -f
